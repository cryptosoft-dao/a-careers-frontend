import { router } from "@/shared/config/router";
import { Page } from "@/shared/config/types";
import { Header, HeaderBack, OpenMenu } from "@/widgets/Header";
import { useStore } from "effector-react";
import { useTranslation } from "react-i18next";

import s from "./style.module.scss";
import { Hr } from "@/shared/ui/hr";
import { Status } from "@/shared/ui/status";
import { getClassStatus } from "@/shared/lib/get-class-status";
import { Address } from "@/shared/ui/column-content";
import { ColumnContent, DownloadTechTask } from "@/shared/ui/column-content";
import { MiniProfile } from "@/entities/user";
import clsx from "clsx";
import { Submit } from "@/shared/ui/submit";

const mockData = {
  status: {
    count_responses: 0,
    type: "status",
  },
  price: 1225,
  address_contract: "0QD1KiJ1lzU4R-0H8zzttc19ma_6djhGNkdd3eawxylyqn0L",
};

export const OrderPage = (): Page => {
  const { t } = useTranslation();
  const activeRoute = useStore(router.$activeRoutes);
  const { orderId } = useStore(activeRoute[0].$params);

  return (
    <>
      <Header>
        <HeaderBack title={`${t(`common.task1`)} #${orderId}`} />

        <OpenMenu />
      </Header>

      <div className={clsx("main", s.container)}>
        <Status
          theme={getClassStatus(mockData.status.count_responses)}
          className={s.status}
        >
          {t("home.task-label2")}
        </Status>

        <h1 className={s.title}>
          –î–æ—Ä–∞–±–æ—Ç–∞—Ç—å –º–µ—Ç–∞-–¥–∞–Ω–Ω—ã–µ –∏ –ø–∞–º—è—Ç—å —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
        </h1>

        <p className={s.price}>üíé {mockData.price}</p>

        <Address address={mockData.address_contract} />

        <ColumnContent title={t("task-detail.description")}>
          –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ –±—ã –ø—Ä–∏ –¥–µ–ø–ª–æ–µ
          –æ–Ω —Ö—Ä–∞–Ω–∏–ª —Å—Å—ã–ª–∫—É –Ω–∞ –æ–¥–Ω–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ, –∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–¥–∞—á–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ —Å
          –∫–æ—à–µ–ª—å–∫–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –º–µ–Ω—è–ª–∏—Å—å –Ω–∞ –¥—Ä—É–≥–∏–µ. –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —ç–ª–µ–º–µ–Ω—Ç—ã
          –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–∫—Ä—ã—Ç—ã (–ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å –ª—É—Ç–±–æ–∫—Å–æ–º). –ü–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏
          –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ —É –≤–ª–∞–¥–µ–ª—å—Ü–∞ –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è.
        </ColumnContent>

        <DownloadTechTask
          file_name="some_awesome_project.pdf"
          file_url="some_awesome_project.pdf"
        />

        <ColumnContent title={t("task-detail.begin")}>
          10 –∏—é–Ω—è, 15:00
        </ColumnContent>

        <ColumnContent title={t("task-detail.finish")}>
          21 –∏—é–Ω—è, 21:00
        </ColumnContent>

        <Hr theme="linear-gradient" className={s.hr} />

        <div className={s.details_order}>
          <p>–°–æ–∑–¥–∞–Ω–æ 7 –∏—é–Ω—è –≤ 16:53 –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ</p>
          <p>–ö–∞—Ç–µ–≥–æ—Ä–∏—è ¬´–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ TON¬ª</p>
        </div>

        <MiniProfile />
      </div>

      <Submit submit_text={`${t("task-detail.buttons.login-and-respond")}‚ö°`} />
    </>
  );
};
